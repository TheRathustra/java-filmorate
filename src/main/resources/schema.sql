/*
DROP TABLE IF EXISTS film_genre;
DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS film;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS genre;
DROP TABLE IF EXISTS users;
 */

CREATE TABLE IF NOT EXISTS MPA (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS film (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar,
    description varchar,
    releaseDate timestamp,
    duration INTEGER,
    MPA INTEGER REFERENCES MPA(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar,
    login varchar,
    name varchar,
    birthday timestamp
);

CREATE TABLE IF NOT EXISTS genre (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar
);

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER,
    user_id INTEGER,
    CONSTRAINT pk_likes PRIMARY KEY(film_id, user_id),
    CONSTRAINT fk_likes_film_id FOREIGN KEY(film_id) REFERENCES film(id) ON DELETE CASCADE,
    CONSTRAINT fk_likes_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INTEGER,
    genre_id INTEGER,
    CONSTRAINT pk_film_genre PRIMARY KEY(film_id, genre_id),
    CONSTRAINT fk_film_genre_film_id FOREIGN KEY(film_id) REFERENCES film(id) ON DELETE CASCADE,
    CONSTRAINT fk_film_genre_genre_id FOREIGN KEY(genre_id) REFERENCES genre(id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id INTEGER,
    friend_id INTEGER,
    CONSTRAINT pk_friends PRIMARY KEY(user_id, friend_id),
    CONSTRAINT fk_friends_user_id FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_friends_friend_id FOREIGN KEY(friend_id) REFERENCES users(id) ON DELETE CASCADE
);